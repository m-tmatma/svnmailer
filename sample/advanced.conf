# This config file is a more advanced one. It uses several
# features you may or may not want to activate. Don't put
# it into production mode unless you've understood what
# all these configuration options are doing.
#
# The config serves for different repositories, which
# possibly contain different project groups and notification
# targets (mail, news, XML-RPC)
#
# You'll find some explaining comments inline

# load the files containing the author mappings and the passwords
# (This is a global config option)
include_config = authors.txt passwords.txt


[general]
# just pipe to sendmail
sendmail_command = /usr/sbin/sendmail

# uncomment the following (and enter a proper mail address)
# if you want to test the config. This effectively overides
# to_addr configurations. The overidden addresses will be
# supplied by an X-Supposed-Recipients header:
# debug_all_mails_to = svnadmin@example.org

# CIA tracker to post commit summaries to
# (activated on per group basis with cia_project_name)
cia_rpc_server = http://cia.navi.cx

# Well, posting to newsgroups is also possible. Here's
# the nntp server to use. Username and password are nick names
# for the actual values, maintained in a separate file
# (see map declarations below and include_config above)
nntp_host = nntp.example.org
nntp_user = nntpuser
nntp_pass = nntppass


### Map Declarations ###

[maps]
# author mappings are maintained in authors.txt
# (the [authors] section is defined there)
from_addr = [authors]
to_addr   = [authors]

# passwords are maintained in passwords.txt
nntp_user = [passwords]
nntp_pass = [passwords]


### Default Settings ###

[defaults]
# authors without an address at example.org need to be
# maintained in authors.txt
from_addr = %(author)s@example.org

# just a default
to_addr = svnadmin@example.org

# These matches are used for storing REPOS and PATH variables
for_repos = .*/(?P<REPOS>[^/]+)$
for_paths = (?P<PATH>[^/]+)/

# final header name is X-SVN-Location and contains
# the last path element of the repository and the first
# one of the committed path (if there's one) by default
custom_header = SVN-Location %(REPOS)s/%(PATH)s

# we don't want to see diffs on file deletions
generate_diffs = add copy modify propchange

# long mails should be split and possibly truncated
# but if the number of mails exceeds 5, just shorten
# to a small summary (one mail containing revision
# metadata)
long_mail_action = 100000 split/truncate/5

# allow the svnmailer to retrieve the content encodings
# of files from properties (edited by the user)
apply_charset_property = yes

# Use the GNU diff tool instead of the internal differ
# (note the line continuation)
diff_command = /usr/bin/diff -up -L %(label_from)s -L %(label_to)s
               %(from)s %(to)s

# Subject specifications different from the hardcoded default
commit_subject_template = %(prefix)s r%(revision)s %(part)s - %(files)s
propchange_subject_template = %(prefix)s r%(revision)s %(property)s
                              changed - %(files)s
lock_subject_template = %(prefix)s locked - %(files)s
unlock_subject_template = %(prefix)s unlocked - %(files)s

commit_subject_prefix     = [svn]
propchange_subject_prefix = [svn]
lock_subject_prefix       = [svn]
unlock_subject_prefix     = [svn]

# subjects longer than the following will be just truncated:
max_subject_length = 511

# You've got a web based repository viewer?
# (there are other possibilities than ViewCVS, have a look at the docs)
browser_base_url = viewcvs http://svn.example.org/viewcvs/?root=%(REPOS)s


### Notification Groups ###

# There are three repositories: home, internal and public
# for_repos matches on the repository file system path
# (e.g. /var/svn/repos/home)

# home repository
# all commits go to the author itself by mail
[home/]
for_repos = .*/home$
for_paths =
to_addr   = %(author)s@example.org

# internal repository
# commits are posted to an internal newsgroup, but not by mail
# the custom header is turned off, because it doesn't make
# much sense in newsgroups
[internal/]
for_repos     = .*/internal$
for_paths     =
to_addr       =
custom_header =
to_newsgroup  = internal.commits

# public repository
# it contains projects and websites directories
# which are notified to different mailing lists
# projects are also submitted to the CIA tracker
# (don't be scared, see http://cia.navi.cx/ instead :-)
[public/projects/*]
for_repos = .*/public$
for_paths = (?P<PATH>projects/(?P<PROJECT>[^/]+))/(?:branches/(?P<BRANCH>[^/]+))?
to_addr   = %(PROJECT)s-commits@example.org

# subject prefix per project
commit_subject_prefix = [%(PROJECT)s]
propchange_subject_prefix = [%(PROJECT)s]
lock_subject_prefix = [%(PROJECT)s]
unlock_subject_prefix = [%(PROJECT)s]

# Supplying a cia project name activates CIA tracking notification
# cia_project_name = %(PROJECT)s

# every commit in projects/PROJECT/branches/BRANCH will be
# submitted as branch BRANCH (otherwise just no branch
# information is assumed)
cia_project_branch = %(BRANCH)s

# strip the leading path for submission (/projects/PROJECT)
cia_project_path = %(PATH)s

[public/websites/*]
for_repos = .*/public$
for_paths = (?P<PATH>websites(?:/[^/]+)?)/
to_addr   = websites-commits@example.org

# fallback group; all stuff not fitting into the public
# repos groups above is caught here
[public/*]
for_repos = .*/public$
for_paths =
fallback = yes
commit_subject_prefix     = [unrelated]
propchange_subject_prefix = [unrelated]
lock_subject_prefix       = [unrelated]
unlock_subject_prefix     = [unrelated]
